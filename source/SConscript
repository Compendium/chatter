#!/usr/bin/env python
env = Environment(CXX = 'g++', CXXFLAGS = '-O0 -Wall -g', LIBPATH='.', CPPPATH='.')
conf = Configure(env)

if not conf.CheckCXXHeader('boost/lexical_cast.hpp'):
	print("Please install (lib)boost -> http://www.boost.org/")
	Exit(1)

if not conf.CheckLib('GL'):
	print("Please install (lib)gl, by either:\
			Linux:\
				getting mesa -> http://mesa3d.org and a fitting driver for your video card, or by directly downloading a driver from your graphics card vendor.\
			Windows:\
				downloading a driver from your video cards vendor.")
	Exit(1)

#TODO glew/sdl dependency checking ??? since they dont really distribute a installable package(for end-users), maybe i need to ship a copy myself?
env = conf.Finish()

def splitter(folder, files):
	return map(lambda x: folder + x + ".cpp", files.split())

# -- libs --
libnetwork = env.Clone()
libnetwork.Library('network', splitter("network/", "address buffer socket"))

libgraphics = env.Clone()
libgraphics.Library('graphics', splitter("graphics/", "window image textvertices chatlog"), LIBS=['GL', 'GLEW', 'SDL', 'SDL_image'])

libinput = env.Clone()
libinput.Library('input', splitter("input/", "input"))

libtime = env.Clone()
libtime.Library('time', splitter("time/", "cooldown"))

libchat = env.Clone()
libchat.Library('chat', splitter("chat/", "message"))
# -- ---- --


client = env.Clone()
client.Program('server.cpp', LIBS=['network'])

guiclient = env.Clone()
guiclient.Program('guiclient.cpp', LIBS=['network', 'graphics', 'GL', 'GLEW', 'SDL', 'SDL_image', 'input', 'time', 'chat'])

server = env.Clone()
client.Program('client.cpp', LIBS=['network'])
