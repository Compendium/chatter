#!/usr/bin/env python
import os;
env = Environment(CXXFLAGS = '-O2 -Wall -g --std=c++0x', LIBPATH='.', CPPPATH='.')
env.ParseConfig("pkg-config sdl --cflags --libs")
env.ParseConfig("pkg-config gl --cflags --libs")
#env = Environment(CXXFLAGS = '-Wall -g --std=c++0x', LIBPATH='.', CPPPATH='.', ENV = {'PATH' : os.environ['PATH'], 'TERM' : os.environ['TERM'], 'HOME' : os.environ['HOME']})
#env = Environment(CXX = 'i486-mingw32-g++', CXXFLAGS='--std=c++0x', LIBPATH='.', CPPPATH='.')

def splitter(folder, files):
	return map(lambda x: folder + x + ".cpp", files.split())

# -- libs --
libnetwork = env.Clone()
libnetwork.Library('network', splitter("network/", "address sendbuffer receivebuffer receivebuffermanager socket"))

libgraphics = env.Clone()
libgraphics.Library('graphics', splitter("graphics/", "window image shaderHelper camera spritebatch guimanager") + ["lib/glew/glew.c"], LIBS=['SDL_image'])

libinput = env.Clone()
libinput.Library('input', splitter("input/", "input"))

libtime = env.Clone()
libtime.Library('time', splitter("time/", "cooldown stopwatch"))

libchat = env.Clone()
libchat.Library('chat', splitter("chat/", "message"))

#libstuff = env.Clone()
#libstuff.Library('stuff', splitter("graphics/", "cube"))

libstate = env.Clone()
libstate.Library('state', splitter("./", "menustate keyboardsettingsstate gamestate state statemanager player item level"))
# -- ---- --

main = env.Clone()
main.Program('main.cpp', LIBS=['state', 'network', 'graphics', 'GL', 'SDL', 'SDL_image', 'input', 'time', 'chat'])

server = env.Clone()
server.Program('server.cpp', LIBS=['network'])
